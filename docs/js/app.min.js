!function($){"use strict";
//***************************************
// Main Application
// To get direct links to audio files in Google Drive:
// http://directlink.booogle.net/
//***************************************
angular.module("app",["ui.router","ngAnimate"]).run(["$sce","$timeout","$rootScope","$state","$stateParams",function($sce,$timeout,$rootScope,$state,$stateParams){
// It's very handy to add references to $state and $stateParams to the
// $rootScope
$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.cache={};var Airtable=require("airtable");$rootScope.Airtable=new Airtable({apiKey:"keyNIbNk17BU31gT8"}).base("app5mxf2QSawm0APU")}]).config(["$locationProvider","$stateProvider","$urlRouterProvider",function($locationProvider,$stateProvider,$urlRouterProvider){
/////////////////////////////
// Redirects and Otherwise //
/////////////////////////////
// Use $urlRouterProvider to configure any redirects (when) and invalid
// urls (otherwise).
$urlRouterProvider.when("/admin","/admin/students"),
//.otherwise(token ? '/sites' : '/start');
//////////////////////////
// State Configurations //
//////////////////////////
$stateProvider.state("students",{url:"/admin/students",templateUrl:"views/students.html",
// auth: true,
/*resolve: {
                cards: function ($stateParams, $rootScope, $http) {

                }
            },*/
controller:function($scope,$rootScope,$state,$filter,$http){$rootScope.showAdmin=!0;var data=[];$rootScope.Airtable("Students").select({sort:[{field:"LastName",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,data.push(record.fields)}),fetchNextPage()},function(error){$scope.students=data,$scope.$apply()}),$scope.query="",$scope.order="Last+Name",$scope.setSort=function(key,e){e.preventDefault(),key=key.replace(/ /g,"+"),$scope.order=$scope.order==key?"-"+key:key},$scope.checkall=!1,$scope.checkallClick=function(){for(var arr=$filter("filter")($scope.students,$scope.query),i=0;i<arr.length;i++)arr[i].selected=$scope.checkall},$scope.print=function(){for(var students=[],i=0;i<$scope.students.length;i++)$scope.students[i].selected&&students.push($scope.students[i].id);students.length>10&&!confirm("Printing over 10 students at a time doesn't always work.  If you run in to issues, wait one minute, click Back, and refresh the page. \n\n Are you sure you want to continue?")||(students.length?$state.go("printAssessment",{students:students.join(",")}):alert("Please select at least one student"))}}}).state("editAssessment",{url:"/admin/student/:student/:type",template:'<div assessment edit="true" type="type" student="student"></div>',controller:function($scope,$rootScope,$state,$filter,$http){$rootScope.showAdmin=!0,$scope.type=$state.params.type,$scope.student=$state.params.student}}).state("viewAssessment",{url:"/student/:student/:type",template:'<div assessment type="type" student="student"></div>',controller:function($scope,$rootScope,$state,$filter,$http){$scope.type=$state.params.type,$scope.student=$state.params.student}}).state("printAssessment",{url:"/print/:students",templateUrl:"views/print.html",controller:function($scope,$rootScope,$state,$filter,$http){var students=$state.params.students.split(",");$scope.total=students.length,$scope.words="words",$scope.letters="letters",$scope.students=students}})}]),angular.module("app").directive("assessment",function($rootScope,$state,$sce,$timeout){return{restrict:"A",replace:!0,transclude:!0,scope:{type:"=",student:"=",assessment:"=",edit:"=",print:"@"},templateUrl:"views/assessment.html",link:function($scope,$element,$attrs,$window){$scope.type=$scope.type.replace(/\b\S/g,function(t){return t.toUpperCase()}),$scope.show=!1,$timeout(function(){$scope.link=window.location.href.replace("/admin","")},0);var colors=[];if($rootScope.Airtable("Colors").select({sort:[{field:"ID",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,colors.push(record.fields)}),fetchNextPage()},function(error){$scope.colors=colors,$scope.$apply()}),void 0==$rootScope.cache[$scope.type]){var items=[];$rootScope.Airtable($scope.type).select({sort:[{field:"ID",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,items.push(record.fields)}),fetchNextPage()},function(error){$rootScope.cache[$scope.type]=items,$scope.items=items,$scope.$apply()})}else $scope.items=$rootScope.cache[$scope.type];if(void 0==$rootScope.cache[$scope.type+" Groups"]){var groups=[];$rootScope.Airtable($scope.type+" Groups").select({sort:[{field:"Order",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,groups.push(record.fields)}),fetchNextPage()},function(error){$rootScope.cache[$scope.type+" Groups"]=groups,$scope.groups=groups,$scope.$apply()})}else $scope.groups=$rootScope.cache[$scope.type+" Groups"];var getStudents=function(cb,assessment){var studentID="string"==typeof $scope.student?$scope.student:$scope.student.id;$rootScope.Airtable("Students").find(studentID,function(err,record){record.fields.id=record.id,$scope.student=record.fields,$scope.show=!$scope.print,$scope.$apply();var assessments=[],disabledItems={},sum=0;$rootScope.Airtable($scope.type+" Assessments").select({filterByFormula:'{Student} = "'+record.fields.ID+'"',sort:[{field:"Date",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,sum+=record.fields.Items?record.fields.Items.length:0,record.fields.sum=sum,assessments.push(record.fields)}),fetchNextPage()},function(error){$scope.show=!!assessments.length,$scope.assessments=assessments;for(var j=0;j<assessments.length;j++)if(assessments[j].Items)for(var i=0;i<assessments[j].Items.length;i++)disabledItems[assessments[j].Items[i]]=assessments[j].Color[0];$scope.disabledItems=disabledItems,cb&&cb(assessment,assessments),$scope.$apply()})})};getStudents(),$scope.linkClick=function($event){$event.target.select()},$scope.toggleWord=function(word){var index=$scope.assessment.Items.indexOf(word);index!=-1?$scope.assessment.Items.splice(index,1):$scope.assessment.Items.push(word)},$scope.setColor=function(color){$scope.assessment.Color[0]=color.id,$scope.activeColor=color},$scope.newAssessment=function(){$scope.assessment={Color:[!1],Items:[],Student:[$scope.student],Date:new Date}},$scope.clickAssessment=function(item,e){if($scope.edit)if($scope.assessment&&item.id==$scope.assessment.id)$scope.assessment=null;else for(var j=0;j<$scope.assessments.length;j++)if($scope.assessments[j].id==item.id){$scope.assessments[j].Date=new Date($scope.assessments[j].Date),$scope.assessment=$scope.assessments[j];for(var i=0;i<$scope.colors.length;i++)$scope.colors[i].id==$scope.assessment.Color[0]&&$scope.setColor($scope.colors[i])}},$scope.cancelAssessment=function(){$scope.assessment=null},$scope.saveAssessment=function(assessment){if(!assessment.Color||!assessment.Color[0])return alert("You must select a color"),!1;if(assessment.id){var id=assessment.id;delete assessment.id,delete assessment.ID,delete assessment.$$hashKey,delete assessment.sum,$rootScope.Airtable($scope.type+" Assessments").update(id,assessment,function(err,record){return err?(alert("There was a problem saving this assessment!"),void console.error(err)):($scope.assessment=null,void getStudents(saveAssessmentCallback,assessment))})}else assessment.Date=new Date(assessment.Date).toISOString().slice(0,10),assessment.Student[0]="object"==typeof assessment.Student[0]?assessment.Student[0].id:assessment.Student[0],$rootScope.Airtable($scope.type+" Assessments").create(assessment,function(err,record){return err?(alert("There was a problem saving this assessment!"),void console.log(err)):($scope.assessment=null,void getStudents(saveAssessmentCallback,assessment))})};var saveAssessmentCallback=function(assessment,assessments){var studentEdit={};studentEdit["Last"+$scope.type+"Assessment"]=assessment.Date;var last=assessments.pop();studentEdit["Total"+$scope.type]=last.sum,$rootScope.Airtable("Students").update($scope.student.id,studentEdit,function(err,record){return err?void console.log(err):($scope.assessment=null,void getStudents())})}}}})}(jQuery);